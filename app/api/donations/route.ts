import { NextResponse } from 'next/server';
import {
  getAllDonations,
  createDonation,
} from '../../../data/donationDatasets';
import { DonationType } from '../../../types/DataTypes';

// GET /api/donations - Get all donations
export async function GET() {
  try {
    const donations = await getAllDonations();
    return NextResponse.json(donations);
  } catch (error) {
    console.error('Error fetching donations:', error);
    return NextResponse.json(
      { error: 'Failed to fetch donations' },
      { status: 500 },
    );
  }
}

// POST /api/donations - Create a new donation
export async function POST(request: Request) {
  try {
    const donationData: Omit<DonationType, 'id'> = await request.json();
    // In a real app with a database, the ID would be generated by the database
    // For now, we'll generate a simple ID
    const donationWithId: DonationType = {
      ...donationData,
      id: Date.now().toString(),
    };
    const newDonation = await createDonation(donationWithId);

    if (!newDonation) {
      return NextResponse.json(
        { error: 'Failed to create donation' },
        { status: 500 },
      );
    }

    return NextResponse.json(newDonation);
  } catch (error) {
    console.error('Error creating donation:', error);
    return NextResponse.json(
      { error: 'Failed to create donation' },
      { status: 500 },
    );
  }
}
